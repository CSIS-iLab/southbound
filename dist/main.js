!function(n){var o={};function i(t){if(o[t])return o[t].exports;var e=o[t]={i:t,l:!1,exports:{}};return n[t].call(e.exports,e,e.exports,i),e.l=!0,e.exports}i.m=n,i.c=o,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=75)}([function(t,e){t.exports=Highcharts},function(t,e,n){var o=n(22)("wks"),i=n(21),r=n(2).Symbol,a="function"==typeof r;(t.exports=function(t){return o[t]||(o[t]=a&&r[t]||(a?r:i)("Symbol."+t))}).store=o},function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e,n){var o=n(10),i=n(32);t.exports=n(5)?function(t,e,n){return o.f(t,e,i(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var o=n(11);t.exports=function(t){if(!o(t))throw TypeError(t+" is not an object!");return t}},function(t,e,n){t.exports=!n(8)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(t,e,n){var r=n(2),a=n(3),s=n(15),l=n(21)("src"),o=n(47),i="toString",c=(""+o).split(i);n(20).inspectSource=function(t){return o.call(t)},(t.exports=function(t,e,n,o){var i="function"==typeof n;i&&(s(n,"name")||a(n,"name",e)),t[e]!==n&&(i&&(s(n,l)||a(n,l,t[e]?""+t[e]:c.join(String(e)))),t===r?t[e]=n:o?t[e]?t[e]=n:a(t,e,n):(delete t[e],a(t,e,n)))})(Function.prototype,i,function(){return"function"==typeof this&&this[l]||o.call(this)})},function(t,e,n){var g=n(2),y=n(20),m=n(3),x=n(6),b=n(34),v="prototype",S=function(t,e,n){var o,i,r,a,s=t&S.F,l=t&S.G,c=t&S.S,u=t&S.P,f=t&S.B,p=l?g:c?g[e]||(g[e]={}):(g[e]||{})[v],d=l?y:y[e]||(y[e]={}),h=d[v]||(d[v]={});for(o in l&&(n=e),n)r=((i=!s&&p&&void 0!==p[o])?p:n)[o],a=f&&i?b(r,g):u&&"function"==typeof r?b(Function.call,r):r,p&&x(p,o,r,t&S.U),d[o]!=r&&m(d,o,a),u&&h[o]!=r&&(h[o]=r)};g.core=y,S.F=1,S.G=2,S.S=4,S.P=8,S.B=16,S.W=32,S.U=64,S.R=128,t.exports=S},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){"use strict";var o=n(42),i={};i[n(1)("toStringTag")]="z",i+""!="[object z]"&&n(6)(Object.prototype,"toString",function(){return"[object "+o(this)+"]"},!0)},function(t,e,n){var o=n(4),i=n(45),r=n(46),a=Object.defineProperty;e.f=n(5)?Object.defineProperty:function(t,e,n){if(o(t),e=r(e,!0),o(n),i)try{return a(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){var o=n(10).f,i=Function.prototype,r=/^\s*function ([^ (]*)/;"name"in i||n(5)&&o(i,"name",{configurable:!0,get:function(){try{return(""+this).match(r)[1]}catch(t){return""}}})},function(t,e,n){"use strict";n(67);var o=n(4),i=n(29),r=n(5),a="toString",s=/./[a],l=function(t){n(6)(RegExp.prototype,a,t,!0)};n(8)(function(){return"/a/b"!=s.call({source:"a",flags:"b"})})?l(function(){var t=o(this);return"/".concat(t.source,"/","flags"in t?t.flags:!r&&t instanceof RegExp?i.call(t):void 0)}):s.name!=a&&l(function(){return s.call(this)})},function(t,e,n){var o=Date.prototype,i="Invalid Date",r="toString",a=o[r],s=o.getTime;new Date(NaN)+""!=i&&n(6)(o,r,function(){var t=s.call(this);return t==t?a.call(this):i})},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){t.exports=function(t){if(null==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e,n){var o=n(36),i=n(17);t.exports=function(t){return o(i(t))}},function(t,e,n){"use strict";var f=n(68),b=n(4),v=n(69),S=n(70),w=n(24),A=n(72),p=n(30),o=n(8),F=Math.min,d=[].push,a="split",h="length",g="lastIndex",k=4294967295,C=!o(function(){RegExp(k,"y")});n(73)("split",2,function(i,r,y,m){var x;return x="c"=="abbc"[a](/(b)*/)[1]||4!="test"[a](/(?:)/,-1)[h]||2!="ab"[a](/(?:ab)*/)[h]||4!="."[a](/(.?)(.?)/)[h]||1<"."[a](/()()/)[h]||""[a](/.?/)[h]?function(t,e){var n=String(this);if(void 0===t&&0===e)return[];if(!f(t))return y.call(n,t,e);for(var o,i,r,a=[],s=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),l=0,c=void 0===e?k:e>>>0,u=new RegExp(t.source,s+"g");(o=p.call(u,n))&&!(l<(i=u[g])&&(a.push(n.slice(l,o.index)),1<o[h]&&o.index<n[h]&&d.apply(a,o.slice(1)),r=o[0][h],l=i,a[h]>=c));)u[g]===o.index&&u[g]++;return l===n[h]?!r&&u.test("")||a.push(""):a.push(n.slice(l)),a[h]>c?a.slice(0,c):a}:"0"[a](void 0,0)[h]?function(t,e){return void 0===t&&0===e?[]:y.call(this,t,e)}:y,[function(t,e){var n=i(this),o=null==t?void 0:t[r];return void 0!==o?o.call(t,n,e):x.call(String(n),t,e)},function(t,e){var n=m(x,t,this,e,x!==y);if(n.done)return n.value;var o=b(t),i=String(this),r=v(o,RegExp),a=o.unicode,s=(o.ignoreCase?"i":"")+(o.multiline?"m":"")+(o.unicode?"u":"")+(C?"y":"g"),l=new r(C?o:"^(?:"+o.source+")",s),c=void 0===e?k:e>>>0;if(0===c)return[];if(0===i.length)return null===A(l,i)?[i]:[];for(var u=0,f=0,p=[];f<i.length;){l.lastIndex=C?f:0;var d,h=A(l,C?i:i.slice(f));if(null===h||(d=F(w(l.lastIndex+(C?0:f)),i.length))===u)f=S(i,f,a);else{if(p.push(i.slice(u,f)),p.length===c)return p;for(var g=1;g<=h.length-1;g++)if(p.push(h[g]),p.length===c)return p;f=u=d}}return p.push(i.slice(u)),p}]})},function(t,e){var n=t.exports={version:"2.6.5"};"number"==typeof __e&&(__e=n)},function(t,e){var n=0,o=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++n+o).toString(36))}},function(t,e,n){var o=n(20),i=n(2),r="__core-js_shared__",a=i[r]||(i[r]={});(t.exports=function(t,e){return a[t]||(a[t]=void 0!==e?e:{})})("versions",[]).push({version:o.version,mode:n(33)?"pure":"global",copyright:"Â© 2019 Denis Pushkarev (zloirock.ru)"})},function(t,e,n){var b=n(34),v=n(36),S=n(37),w=n(24),o=n(48);t.exports=function(f,t){var p=1==f,d=2==f,h=3==f,g=4==f,y=6==f,m=5==f||y,x=t||o;return function(t,e,n){for(var o,i,r=S(t),a=v(r),s=b(e,n,3),l=w(a.length),c=0,u=p?x(t,l):d?x(t,0):void 0;c<l;c++)if((m||c in a)&&(i=s(o=a[c],c,r),f))if(p)u[c]=i;else if(i)switch(f){case 3:return!0;case 5:return o;case 6:return c;case 2:u.push(o)}else if(g)return!1;return y?-1:h||g?g:u}}},function(t,e,n){var o=n(25),i=Math.min;t.exports=function(t){return 0<t?i(o(t),9007199254740991):0}},function(t,e){var n=Math.ceil,o=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(0<t?o:n)(t)}},function(t,e){t.exports={}},function(t,e,n){var o=n(57),i=n(40);t.exports=Object.keys||function(t){return o(t,i)}},function(t,e,n){var o=n(22)("keys"),i=n(21);t.exports=function(t){return o[t]||(o[t]=i(t))}},function(t,e,n){"use strict";var o=n(4);t.exports=function(){var t=o(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},function(t,e,n){"use strict";var o,i,a=n(29),s=RegExp.prototype.exec,l=String.prototype.replace,r=s,c="lastIndex",u=(o=/a/,i=/b*/g,s.call(o,"a"),s.call(i,"a"),0!==o[c]||0!==i[c]),f=void 0!==/()??/.exec("")[1];(u||f)&&(r=function(t){var e,n,o,i,r=this;return f&&(n=new RegExp("^"+r.source+"$(?!\\s)",a.call(r))),u&&(e=r[c]),o=s.call(r,t),u&&o&&(r[c]=r.global?o.index+o[0].length:e),f&&o&&1<o.length&&l.call(o[0],n,function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(o[i]=void 0)}),o}),t.exports=r},function(t,e,n){var o=n(11),i=n(2).document,r=o(i)&&o(i.createElement);t.exports=function(t){return r?i.createElement(t):{}}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e){t.exports=!1},function(t,e,n){var r=n(35);t.exports=function(o,i,t){if(r(o),void 0===i)return o;switch(t){case 1:return function(t){return o.call(i,t)};case 2:return function(t,e){return o.call(i,t,e)};case 3:return function(t,e,n){return o.call(i,t,e,n)}}return function(){return o.apply(i,arguments)}}},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e,n){var o=n(16);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==o(t)?t.split(""):Object(t)}},function(t,e,n){var o=n(17);t.exports=function(t){return Object(o(t))}},function(t,e,n){var o=n(1)("unscopables"),i=Array.prototype;null==i[o]&&n(3)(i,o,{}),t.exports=function(t){i[o][t]=!0}},function(t,e,n){"use strict";var o=n(38),i=n(52),r=n(26),a=n(18);t.exports=n(53)(Array,"Array",function(t,e){this._t=a(t),this._i=0,this._k=e},function(){var t=this._t,e=this._k,n=this._i++;return!t||n>=t.length?(this._t=void 0,i(1)):i(0,"keys"==e?n:"values"==e?t[n]:[n,t[n]])},"values"),r.Arguments=r.Array,o("keys"),o("values"),o("entries")},function(t,e){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(t,e,n){var o=n(10).f,i=n(15),r=n(1)("toStringTag");t.exports=function(t,e,n){t&&!i(t=n?t:t.prototype,r)&&o(t,r,{configurable:!0,value:e})}},function(t,e,n){var i=n(16),r=n(1)("toStringTag"),a="Arguments"==i(function(){return arguments}());t.exports=function(t){var e,n,o;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),r))?n:a?i(e):"Object"==(o=i(e))&&"function"==typeof e.callee?"Arguments":o}},function(t,e,n){"use strict";var o=n(8);t.exports=function(t,e){return!!t&&o(function(){e?t.call(null,function(){},1):t.call(null)})}},function(t,e,n){"use strict";var o=n(7),i=n(23)(5),r="find",a=!0;r in[]&&Array(1)[r](function(){a=!1}),o(o.P+o.F*a,"Array",{find:function(t){return i(this,t,1<arguments.length?arguments[1]:void 0)}}),n(38)(r)},function(t,e,n){t.exports=!n(5)&&!n(8)(function(){return 7!=Object.defineProperty(n(31)("div"),"a",{get:function(){return 7}}).a})},function(t,e,n){var i=n(11);t.exports=function(t,e){if(!i(t))return t;var n,o;if(e&&"function"==typeof(n=t.toString)&&!i(o=n.call(t)))return o;if("function"==typeof(n=t.valueOf)&&!i(o=n.call(t)))return o;if(!e&&"function"==typeof(n=t.toString)&&!i(o=n.call(t)))return o;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){t.exports=n(22)("native-function-to-string",Function.toString)},function(t,e,n){var o=n(49);t.exports=function(t,e){return new(o(t))(e)}},function(t,e,n){var o=n(11),i=n(50),r=n(1)("species");t.exports=function(t){var e;return i(t)&&("function"!=typeof(e=t.constructor)||e!==Array&&!i(e.prototype)||(e=void 0),o(e)&&null===(e=e[r])&&(e=void 0)),void 0===e?Array:e}},function(t,e,n){var o=n(16);t.exports=Array.isArray||function(t){return"Array"==o(t)}},function(t,e,n){for(var o=n(39),i=n(27),r=n(6),a=n(2),s=n(3),l=n(26),c=n(1),u=c("iterator"),f=c("toStringTag"),p=l.Array,d={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},h=i(d),g=0;g<h.length;g++){var y,m=h[g],x=d[m],b=a[m],v=b&&b.prototype;if(v&&(v[u]||s(v,u,p),v[f]||s(v,f,m),l[m]=p,x))for(y in o)v[y]||r(v,y,o[y],!0)}},function(t,e){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,n){"use strict";var b=n(33),v=n(7),S=n(6),w=n(3),A=n(26),F=n(54),k=n(41),C=n(61),T=n(1)("iterator"),O=!([].keys&&"next"in[].keys()),E="values",R=function(){return this};t.exports=function(t,e,n,o,i,r,a){F(n,e,o);var s,l,c,u=function(t){if(!O&&t in h)return h[t];switch(t){case"keys":case E:return function(){return new n(this,t)}}return function(){return new n(this,t)}},f=e+" Iterator",p=i==E,d=!1,h=t.prototype,g=h[T]||h["@@iterator"]||i&&h[i],y=g||u(i),m=i?p?u("entries"):y:void 0,x="Array"==e&&h.entries||g;if(x&&(c=C(x.call(new t)))!==Object.prototype&&c.next&&(k(c,f,!0),b||"function"==typeof c[T]||w(c,T,R)),p&&g&&g.name!==E&&(d=!0,y=function(){return g.call(this)}),b&&!a||!O&&!d&&h[T]||w(h,T,y),A[e]=y,A[f]=R,i)if(s={values:p?y:u(E),keys:r?y:u("keys"),entries:m},a)for(l in s)l in h||S(h,l,s[l]);else v(v.P+v.F*(O||d),e,s);return s}},function(t,e,n){"use strict";var o=n(55),i=n(32),r=n(41),a={};n(3)(a,n(1)("iterator"),function(){return this}),t.exports=function(t,e,n){t.prototype=o(a,{next:i(1,n)}),r(t,e+" Iterator")}},function(t,e,o){var i=o(4),r=o(56),a=o(40),s=o(28)("IE_PROTO"),l=function(){},c="prototype",u=function(){var t,e=o(31)("iframe"),n=a.length;for(e.style.display="none",o(60).appendChild(e),e.src="javascript:",(t=e.contentWindow.document).open(),t.write("<script>document.F=Object<\/script>"),t.close(),u=t.F;n--;)delete u[c][a[n]];return u()};t.exports=Object.create||function(t,e){var n;return null!==t?(l[c]=i(t),n=new l,l[c]=null,n[s]=t):n=u(),void 0===e?n:r(n,e)}},function(t,e,n){var a=n(10),s=n(4),l=n(27);t.exports=n(5)?Object.defineProperties:function(t,e){s(t);for(var n,o=l(e),i=o.length,r=0;r<i;)a.f(t,n=o[r++],e[n]);return t}},function(t,e,n){var a=n(15),s=n(18),l=n(58)(!1),c=n(28)("IE_PROTO");t.exports=function(t,e){var n,o=s(t),i=0,r=[];for(n in o)n!=c&&a(o,n)&&r.push(n);for(;e.length>i;)a(o,n=e[i++])&&(~l(r,n)||r.push(n));return r}},function(t,e,n){var l=n(18),c=n(24),u=n(59);t.exports=function(s){return function(t,e,n){var o,i=l(t),r=c(i.length),a=u(n,r);if(s&&e!=e){for(;a<r;)if((o=i[a++])!=o)return!0}else for(;a<r;a++)if((s||a in i)&&i[a]===e)return s||a||0;return!s&&-1}}},function(t,e,n){var o=n(25),i=Math.max,r=Math.min;t.exports=function(t,e){return(t=o(t))<0?i(t+e,0):r(t,e)}},function(t,e,n){var o=n(2).document;t.exports=o&&o.documentElement},function(t,e,n){var o=n(15),i=n(37),r=n(28)("IE_PROTO"),a=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=i(t),o(t,r)?t[r]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?a:null}},function(t,e,n){var o=n(7),i=n(63)(!1);o(o.S,"Object",{values:function(t){return i(t)}})},function(t,e,n){var l=n(27),c=n(18),u=n(64).f;t.exports=function(s){return function(t){for(var e,n=c(t),o=l(n),i=o.length,r=0,a=[];r<i;)u.call(n,e=o[r++])&&a.push(s?[e,n[e]]:n[e]);return a}}},function(t,e){e.f={}.propertyIsEnumerable},function(t,e,n){"use strict";var o=n(7),i=n(23)(1);o(o.P+o.F*!n(43)([].map,!0),"Array",{map:function(t){return i(this,t,arguments[1])}})},function(t,e,n){"use strict";var o=n(7),i=n(23)(0),r=n(43)([].forEach,!0);o(o.P+o.F*!r,"Array",{forEach:function(t){return i(this,t,arguments[1])}})},function(t,e,n){n(5)&&"g"!=/./g.flags&&n(10).f(RegExp.prototype,"flags",{configurable:!0,get:n(29)})},function(t,e,n){var o=n(11),i=n(16),r=n(1)("match");t.exports=function(t){var e;return o(t)&&(void 0!==(e=t[r])?!!e:"RegExp"==i(t))}},function(t,e,n){var i=n(4),r=n(35),a=n(1)("species");t.exports=function(t,e){var n,o=i(t).constructor;return void 0===o||null==(n=i(o)[a])?e:r(n)}},function(t,e,n){"use strict";var o=n(71)(!0);t.exports=function(t,e,n){return e+(n?o(t,e).length:1)}},function(t,e,n){var l=n(25),c=n(17);t.exports=function(s){return function(t,e){var n,o,i=String(c(t)),r=l(e),a=i.length;return r<0||a<=r?s?"":void 0:(n=i.charCodeAt(r))<55296||56319<n||r+1===a||(o=i.charCodeAt(r+1))<56320||57343<o?s?i.charAt(r):n:s?i.slice(r,r+2):o-56320+(n-55296<<10)+65536}}},function(t,e,n){"use strict";var i=n(42),r=RegExp.prototype.exec;t.exports=function(t,e){var n=t.exec;if("function"==typeof n){var o=n.call(t,e);if("object"!=typeof o)throw new TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==i(t))throw new TypeError("RegExp#exec called on incompatible receiver");return r.call(t,e)}},function(t,e,n){"use strict";n(74);var u=n(6),f=n(3),p=n(8),d=n(17),h=n(1),g=n(30),y=h("species"),m=!p(function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}),x=function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n="ab".split(t);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();t.exports=function(n,t,e){var o=h(n),r=!p(function(){var t={};return t[o]=function(){return 7},7!=""[n](t)}),i=r?!p(function(){var t=!1,e=/a/;return e.exec=function(){return t=!0,null},"split"===n&&(e.constructor={},e.constructor[y]=function(){return e}),e[o](""),!t}):void 0;if(!r||!i||"replace"===n&&!m||"split"===n&&!x){var a=/./[o],s=e(d,o,""[n],function(t,e,n,o,i){return e.exec===g?r&&!i?{done:!0,value:a.call(e,n,o)}:{done:!0,value:t.call(n,e,o)}:{done:!1}}),l=s[0],c=s[1];u(String.prototype,n,l),f(RegExp.prototype,o,2==t?function(t,e){return c.call(t,this,e)}:function(t){return c.call(t,this)})}}},function(t,e,n){"use strict";var o=n(30);n(7)({target:"RegExp",proto:!0,forced:o!==/./.exec},{exec:o})},function(t,e,n){"use strict";n.r(e);n(44),n(51),n(39),n(9),n(62),n(65),n(12),n(66);var o=n(0),i=n.n(o),r=function(){i.a.chart("fditoasean",{data:{googleSpreadsheetKey:"1uvXxceRgz3RZtn51krgVjCg_v2CDjInOsfCbSd6BlMM",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Taiwanâs FDI to Mainland China and to ASEAN, 1991-2000 (US$ billions)"},credits:{enabled:!0,href:"http://www.aseancenter.org.tw/upload/files/20130111.pdf",text:"Source: Department of Investment Service, Ministry of Economic Affairs, ROC (Taiwan)"},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1},yAxis:{title:{text:"Billions"}},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n        $').concat(this.y," Billion")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},a=function(){i.a.chart("fditosoutheast",{data:{googleSpreadsheetKey:"1LFR3a4zsyvmivWmICgxXR8uqJB_h_AT5dTfkmwb01WM",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Taiwanâs FDI to Mainland China and to Southeast Asia, 2001-2010 (US$ billions)"},credits:{enabled:!0,href:"https://www.dois.moea.gov.tw/Home/relation3",text:"Source: Department of Investment Service, Ministry of Economic Affairs, ROC (Taiwan)"},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1},yAxis:{title:{text:"Billions"},allowDecimals:!1,tickInterval:4},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n        $').concat(this.y," Billion")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},s=function(){i.a.chart("percapitagrowth",{data:{googleSpreadsheetKey:"1ovEaZyhAmti9u9Db1arWwm14mkLxH-fZhO_ccnzMPrs",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"GDP per capita growth of selected countries, 1995-2000"},credits:{enabled:!0,href:!1,text:"Source: GDP per capita growth of selected countries, 1995-2000"},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1,offset:-140},yAxis:{title:{text:""},allowDecimals:!1,tickInterval:4},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return console.log(this),'<span style="color:'.concat(this.color,'">â </span>\n        ').concat(this.y," Units")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},l=function(){i.a.chart("unemployment",{data:{googleSpreadsheetKey:"17ZU0xF_J1KGqliOm4Jzia9hr9idZTgGqfsXwwhcjDQY",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Overall and youth unemployment rate, 2001-2016"},credits:{enabled:!0,href:"http://statdb.dgbas.gov.tw/pxweb/Dialog/CityItemlist_n.asp",text:'Source: "National Statistics," Directorate-General of Budget, Accounting and Statistics Executive Yuan, ROC (Taiwan).'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},yAxis:{title:{text:"Percent"},allowDecimals:!1},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n        ').concat(this.y," %")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},c=function(){i.a.chart("exporttonsp",{data:{googleSpreadsheetKey:"1noK3P9pmpnQcmfEG0VpA9sIC20nvga2Y7KPLt4X8Sb8",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Taiwanâs exports to NSP target countries, 2000-2016 (US$ billions)"},credits:{enabled:!0,href:"http://cus93.trade.gov.tw/FSCE000F/FSCE000F",text:'Source: "Trade Statistics," Bureau of Trade, Ministry of Economic Affairs, ROC (Taiwan)'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1},yAxis:{title:{text:"Billions"},tickInterval:20},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n        $').concat(this.y," Billion")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},u=function(){i.a.chart("outboundinvestment",{data:{googleSpreadsheetKey:"1oe-Dd6JUV1LFKU3OP2wL2AkDZNUflanAoQJmPRUxhPc",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Taiwanâs outbound investment in NSP target countries, 2000-2016 (US$ billions)"},credits:{enabled:!0,href:"http://www.moeaic.gov.tw/english/news_bsAn.jsp.",text:'Source: "Statistics," Investment Commission, Ministry of Economic Affairs, ROC (Taiwan)'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1},yAxis:{title:{text:"Billions"}},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n        $').concat(this.y.toFixed(2)," Billion")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},f=function(){i.a.chart("outboundchina",{data:{googleSpreadsheetKey:"1Wn-eSJJ_Tj03S6juKDIN8ShEhTlvfsIn43KDs03K3Pk",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Taiwanâs outbound investment to Mainland China and NSP target countries (US$ billions), 2000-2016"},credits:{enabled:!0,href:"http://www.moeaic.gov.tw/english/news_bsAn.jsp",text:'Source: "Statistics," Investment Commission, Ministry of Economic Affairs, ROC. (Taiwan)'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1},yAxis:{title:{text:"Billions"},allowDecimals:!1},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n        $').concat(this.y," Billion")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},p=function(){i.a.chart("exporttochina",{data:{googleSpreadsheetKey:"1fbPsHRpcD65adBAq-SyOu-0U9CpSl6NYXZwf02DNkHk",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Taiwanâs exports to Mainland China and NSP target countries (US$ billions)"},credits:{enabled:!0,href:"http://cus93.trade.gov.tw/FSCE000F/FSCE000F",text:'Source: "Trade Statistics," Bureau of Trade, Ministry of Economic Affairs, ROC (Taiwan)'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1},yAxis:{title:{text:"Billions"},allowDecimals:!1,tickInterval:20},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n        $').concat(this.y," Billion")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},d=function(){i.a.chart("chinaandtaiwanexport",{data:{googleSpreadsheetKey:"1uWQUzzOHA7UhHTZdUDIScqQa23L1RNnf2l0CwVMOorw",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Mainland China and Taiwanâs exports to NSP target countries (US$ billions)"},credits:{enabled:!0,href:"http://cus93.trade.gov.tw/FSCE000F/FSCE000F",text:'Source: "Trade Statistics," Bureau of Trade, Ministry of Economic Affairs, ROC (Taiwan);  "National Data," National Bureau of Statistics, P.R.C.; "Customs Statistics," General Administration of Customs, P.R.C.'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1},yAxis:{title:{text:"Billions"},allowDecimals:!1,tickInterval:100},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n        $').concat(this.y," Billion")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},h=function(){i.a.chart("chinaandtaiwanoutbound",{data:{googleSpreadsheetKey:"1nRi43f7BpZdRXAMg-9q0BBr0UY4Tqxo7eUh0QtWCWxs",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Mainland China and Taiwanâs outbound investment to NSP target countries (US$ billions)"},credits:{enabled:!0,href:"http://www.moeaic.gov.tw/english/news_bsAn.jsp",text:'Source: "Statistics," Investment Commission, Ministry of Economic Affairs, ROC (Taiwan ); "China Statistical Bulletin of Chinaâs Outward Foreign Direct Investment," Ministry of Commerce, P.R.C.'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1},yAxis:{title:{text:"Billions"},allowDecimals:!1},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n        $').concat(this.y," Billion")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},g=(n(13),n(14),n(19),function(){i.a.chart("numberoftourists",{data:{googleSpreadsheetKey:"1J3EJxTli51xGcdUSfS8EJgHJ6EmBJbHvAsJvL9YGN0Y",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Number of tourists from Mainland China, Hong Kong and Macau, and Rest of World"},credits:{enabled:!0,href:"http://admin.taiwan.net.tw/public/public.aspx?no=315",text:'Source: "Tourism Statistics", Tourism Bureau, ROC (Taiwan)'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1},yAxis:{title:{text:"Millions"},allowDecimals:!1},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return 7===this.y.toString().split("").length?'<span style="color:'.concat(this.color,'">â </span>\n               $').concat(this.y.toString().substring(0,1),".").concat(this.y.toString().substring(2,4)," Million"):'<span style="color:'.concat(this.color,'">â </span>\n              $0.').concat(this.y.toString().substring(0,2)," Million")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})}),y=function(){i.a.chart("sourceoftourists",{data:{googleSpreadsheetKey:"1WfXB70z4dY5auKx8gXKofAZnqJfaEfw9sDut_-YPDU0",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Top 5 Sources of Inbound Tourists to Taiwan"},credits:{enabled:!0,href:"http://admin.taiwan.net.tw/public/public.aspx?no=315",text:'Source: "Tourism Statistics," Tourism Bureau, ROC (Taiwan)'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1},yAxis:{title:{text:"Millions"},allowDecimals:!1,tickInterval:1e6},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return 7===this.y.toString().split("").length?'<span style="color:'.concat(this.color,'">â </span>\n               $').concat(this.y.toString().substring(0,1),".").concat(this.y.toString().substring(2,4)," Million"):'<span style="color:'.concat(this.color,'">â </span>\n              $0.').concat(this.y.toString().substring(0,2)," Million")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},m=function(){i.a.chart("touristsfromNSP",{data:{googleSpreadsheetKey:"1wVff6GqMUWUpSVh9nQmHFWlyKpluukKjHBEJBmoZHzo",googleSpreadsheetWorksheet:1},chart:{type:"line"},title:{text:"Number of Inbound Tourists From Mainland China and NSP Target Countries, 2008-2017"},credits:{enabled:!0,href:"http://stat.taiwan.net.tw/system/country_months_arrival.html",text:'Source: "Tourism Statistic Database," Tourism Bureau, ROC (Taiwan)'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal"},xAxis:{allowDecimals:!1},yAxis:{title:{text:"Millions"},allowDecimals:!1,tickInterval:1e6},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return 7===this.y.toString().split("").length?'<span style="color:'.concat(this.color,'">â </span>\n               $').concat(this.y.toString().substring(0,1),".").concat(this.y.toString().substring(2,4)," Million"):'<span style="color:'.concat(this.color,'">â </span>\n              $0.').concat(this.y.toString().substring(0,2)," Million")}},plotOptions:{line:{marker:{enabled:!1,symbol:"circle",radius:3},lineWidth:3}}})},x=function(){i.a.chart("touriststotaiwan",{data:{googleSpreadsheetKey:"1gyZUwXeD3rE7BxADY71fHPsbbWyV4sb9fVRZsh6PYyE",googleSpreadsheetWorksheet:1},chart:{type:"column"},title:{text:"Main Sources of Tourists to Taiwan, 2017 and 2018 (Millions)"},credits:{enabled:!0,href:"http://stat.taiwan.net.tw/system/country_months_arrival.html",text:'CSIS China Power Project | Source: "Tourism Statistic Database," Tourism Bureau, ROC (Taiwan)'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal",reversed:!0},xAxis:{},yAxis:{title:{text:"Millions"},tickInterval:2e6},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return 7===this.y.toString().split("").length?'<span style="color:'.concat(this.color,'">â </span>\n                ').concat(this.series.name,"<br>\n               $").concat(this.y.toString().substring(0,1),".").concat(this.y.toString().substring(2,4)," Million"):'<span style="color:'.concat(this.color,'">â </span>\n                 ').concat(this.series.name,"<br>\n              $0.").concat(this.y.toString().substring(0,2)," Million")}},plotOptions:{column:{stacking:"normal",dataLabels:{enabled:!1},maxPointWidth:150}}})},b=function(){i.a.chart("studentenrollees",{data:{googleSpreadsheetKey:"1zl-WEfAt1KBexvX_NsC-2-K0aSMHdVYUk1tgnYLTBtQ",googleSpreadsheetWorksheet:1},chart:{type:"column"},title:{text:"Immigrants Student Enrollees In Primary and Secondary Schools by Country of Origin, 2005-2016"},credits:{enabled:!0,href:"https://depart.moe.edu.tw/ed4500/cp.aspx?n=1B58E0B736635285&s=D04C74553DB60CAD",text:'CSIS China Power Project | Source: "Statistical Summaries," Ministry of Education, ROC (Taiwan)'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal",reversed:!0},xAxis:{},yAxis:{title:{text:"Thousands"},tickInterval:5e4},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n                ').concat(this.series.name,"<br>\n               $").concat(this.y.toString().substring(0,2)," Thousand")}},plotOptions:{column:{stacking:"normal",dataLabels:{enabled:!1},maxPointWidth:50}}})},v=function(){i.a.chart("destinationofstudents",{data:{googleSpreadsheetKey:"1XhbQqVqJFWpPmhRwwm28tiv8u--IgBVNsuMRrcPUjuE",googleSpreadsheetWorksheet:1},chart:{type:"pie"},title:{text:"Study Abroad Destination of Outbound Students From Taiwan, 2015-2016"},credits:{enabled:!0,href:"https://depart.moe.edu.tw/ed2500/News_Content.aspx?n=2D25F01E87D6EE17&sms=4061A6357922F45A&s=ECAAD5FFD81C8057",text:"CSIS China Power Project | Source: Statistical Table on Taiwanese Students Studying Abroad in Major Countries Around the World for 2016, Ministry of Education, ROC (Taiwan), December 22, 2016"},legend:{align:"right",verticalAlign:"bottom",layout:"vertical"},xAxis:{},yAxis:{title:{text:"Millions"}},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n               ').concat(this.y.toFixed(2),"%")}},plotOptions:{pie:{dataLabels:{enabled:!0,distance:25,style:{fontWeight:"bold"}},startAngle:0,endAngle:360,center:["50%","45%"],size:"90%"}},series:[{index:0,innerSize:"70%"}],responsive:{rules:[{condition:{maxWidth:600,minWidth:200},chartOptions:{plotOptions:{pie:{dataLabels:{distance:-20}}}}}]}})},S=function(){i.a.chart("destinationnsp",{data:{googleSpreadsheetKey:"1aVjg_9H2cMDjYfrFSg-PZxL4Ex25QXaWg3pymtiUTpk",googleSpreadsheetWorksheet:1},chart:{type:"bar"},title:{text:"NSP study abroad destination for outbound students from Taiwan, 2015-2016"},credits:{enabled:!0,href:"https://depart.moe.edu.tw/ed2500/News_Content.aspx?n=2D25F01E87D6EE17&sms=4061A6357922F45A&s=ECAAD5FFD81C8057",text:'CSIS China Power Project | Source: "105å¹´åº¦ä¸çåä¸»è¦åå®¶ä¹æåçå­¸çäººæ¸çµ±è¨è¡¨" [Statistical Table on Taiwanese Students Studying Abroad in Major Countries Around the World for 2016 (105 niandu shijie gezhuyao guojia zhi woguo liuxuesheng renshu tongjibiao)], Ministry of Education, ROC (Taiwan), December 22, 2016'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal",reversed:!0},xAxis:{},yAxis:{title:"",ceiling:100,tickInterval:10,labels:{format:"{value}%"}},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n                ').concat(this.series.name,"<br>\n               ").concat(this.y.toFixed(2),"%")}},plotOptions:{series:{stacking:"normal",dataLabels:{enabled:!1},maxPointWidth:125}}})},w=function(){i.a.chart("sourceofstudents",{data:{googleSpreadsheetKey:"1gIERPwsHEAbLQT6JZi00nwCqtW8RiEcKEcAm0Z1A8cc",googleSpreadsheetWorksheet:1},chart:{type:"pie"},title:{text:"Sources of Inbound Students to Taiwan, 2015-2016"},credits:{enabled:!0,href:"https://ois.moe.gov.tw/fs/html/Statistics.html",text:'CSIS China Power Project | Source: "104å¤§å°æ ¡é¢å¢å¤å­¸çäººæ¸çµ±è¨" [ 2015 Foreign College and University Students Statistics (104 dazhuan xiaoyuan jingwai xuesheng renshu tongji)], Ministiry of Education, ROC (Taiwan)'},legend:{align:"right",verticalAlign:"bottom",layout:"vertical"},xAxis:{},yAxis:{title:{text:"Millions"}},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n               ').concat(this.y.toFixed(2),"%")}},plotOptions:{pie:{dataLabels:{enabled:!0,distance:25,style:{fontWeight:"bold"}},startAngle:0,endAngle:360,center:["50%","45%"],size:"90%"}},series:[{index:0,innerSize:"70%"}],responsive:{rules:[{condition:{maxWidth:600,minWidth:200},chartOptions:{plotOptions:{pie:{dataLabels:{distance:-20}}}}}]}})},A=function(){i.a.chart("shareofinbound",{data:{googleSpreadsheetKey:"18tek6NwxV-vUfkkztYeqlS-v_U8jAmqiIZOngbqT5rI",googleSpreadsheetWorksheet:1},chart:{type:"bar"},title:{text:"NSP study abroad destination for outbound students from Taiwan, 2015-2016"},credits:{enabled:!0,href:"https://depart.moe.edu.tw/ed2500/News_Content.aspx?n=2D25F01E87D6EE17&sms=4061A6357922F45A&s=ECAAD5FFD81C8057",text:'CSIS China Power Project | Source: "105å¹´åº¦ä¸çåä¸»è¦åå®¶ä¹æåçå­¸çäººæ¸çµ±è¨è¡¨" [Statistical Table on Taiwanese Students Studying Abroad in Major Countries Around the World for 2016 (105 niandu shijie gezhuyao guojia zhi woguo liuxuesheng renshu tongjibiao)], Ministry of Education, ROC (Taiwan), December 22, 2016'},legend:{align:"center",verticalAlign:"bottom",layout:"horizontal",reversed:!0},xAxis:{},yAxis:{title:"",ceiling:100,tickInterval:10,labels:{format:"{value}%"}},tooltip:{headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>",pointFormatter:function(){return'<span style="color:'.concat(this.color,'">â </span>\n                ').concat(this.series.name,"<br>\n               ").concat(this.y.toFixed(2),"%")}},plotOptions:{series:{stacking:"normal",dataLabels:{enabled:!1},maxPointWidth:125}}})},F={colors:["#ed392a","#58a897","#83badc","#3b75bb","#a483a8","#f7890e","#69518d","#f7d768","#8cb561","#ef9a9a","#728c99"],chart:{backgroundColor:"#FFF",border:"none",color:"#000",plotShadow:!1,height:500},title:{style:{color:"#000",font:'25px "Roboto", Arial, sans-serif',fontWeight:"400"},widthAdjust:-60},subtitle:{style:{fontSize:"12px",fontFamily:"'Hind', 'Arial', sans-serif",color:"#808080"}},credits:{style:{cursor:"default",fontFamily:"'Hind', 'Arial', sans-serif"}},tooltip:{style:{fontSize:"13px",fontFamily:"'Hind', 'Arial', sans-serif"},headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>"},xAxis:{labels:{style:{color:"#666",fontSize:"12px",fontFamily:"'Hind', 'Arial', sans-serif"}},title:{style:{color:"#666",fontSize:"13px",fontFamily:"'Hind', 'Arial', sans-serif"}},gridLineWidth:1,lineWidth:0,tickColor:"#e6e6e6"},yAxis:{labels:{style:{color:"#666",fontSize:"12px",fontFamily:"'Hind', 'Arial', sans-serif"},x:-3},title:{style:{color:"#666",fontSize:"13px",fontFamily:"'Hind', 'Arial', sans-serif"},margin:20},tickColor:"#e6e6e6"},legend:{title:{style:{fontFamily:"'Roboto', 'Arial', sans-serif",fontSize:"15px",color:"#000",fontStyle:"normal"}},itemStyle:{color:"#000",fontSize:"14px",fontFamily:"'Hind', 'Arial', sans-serif",textOverflow:null},itemHoverStyle:{color:"#ed392a"}}};window.addEventListener("DOMContentLoaded",function(){console.log(F),Highcharts.theme=F,Highcharts.setOptions(Highcharts.theme),r(),a(),s(),l(),c(),u(),f(),p(),d(),h(),g(),y(),m(),x(),b(),v(),S(),w(),A()})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
