!function(e){var r={};function o(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=r,o.d=function(t,n,e){o.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(n,t){if(1&t&&(n=o(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(o.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var r in n)o.d(e,r,function(t){return n[t]}.bind(null,r));return e},o.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(n,"a",n),n},o.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},o.p="",o(o.s=62)}([function(t,n,e){var r=e(14)("wks"),o=e(13),i=e(1).Symbol,a="function"==typeof i;(t.exports=function(t){return r[t]||(r[t]=a&&i[t]||(a?i:o)("Symbol."+t))}).store=r},function(t,n){var e=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=e)},function(t,n,e){var r=e(5),o=e(22);t.exports=e(4)?function(t,n,e){return r.f(t,n,o(1,e))}:function(t,n,e){return t[n]=e,t}},function(t,n,e){var h=e(1),v=e(10),m=e(2),b=e(7),x=e(24),g="prototype",S=function(t,n,e){var r,o,i,a,u=t&S.F,c=t&S.G,s=t&S.S,f=t&S.P,l=t&S.B,p=c?h:s?h[n]||(h[n]={}):(h[n]||{})[g],d=c?v:v[n]||(v[n]={}),y=d[g]||(d[g]={});for(r in c&&(e=n),e)i=((o=!u&&p&&void 0!==p[r])?p:e)[r],a=l&&o?x(i,h):f&&"function"==typeof i?x(Function.call,i):i,p&&b(p,r,i,t&S.U),d[r]!=i&&m(d,r,a),f&&y[r]!=i&&(y[r]=i)};h.core=v,S.F=1,S.G=2,S.S=4,S.P=8,S.B=16,S.W=32,S.U=64,S.R=128,t.exports=S},function(t,n,e){t.exports=!e(12)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(t,n,e){var r=e(11),o=e(36),i=e(37),a=Object.defineProperty;n.f=e(4)?Object.defineProperty:function(t,n,e){if(r(t),n=i(n,!0),r(e),o)try{return a(t,n,e)}catch(t){}if("get"in e||"set"in e)throw TypeError("Accessors not supported!");return"value"in e&&(t[n]=e.value),t}},function(t,n){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,n,e){var i=e(1),a=e(2),u=e(8),c=e(13)("src"),r=e(38),o="toString",s=(""+r).split(o);e(10).inspectSource=function(t){return r.call(t)},(t.exports=function(t,n,e,r){var o="function"==typeof e;o&&(u(e,"name")||a(e,"name",n)),t[n]!==e&&(o&&(u(e,c)||a(e,c,t[n]?""+t[n]:s.join(String(n)))),t===i?t[n]=e:r?t[n]?t[n]=e:a(t,n,e):(delete t[n],a(t,n,e)))})(Function.prototype,o,function(){return"function"==typeof this&&this[c]||r.call(this)})},function(t,n){var e={}.hasOwnProperty;t.exports=function(t,n){return e.call(t,n)}},function(t,n,e){var r=e(25),o=e(27);t.exports=function(t){return r(o(t))}},function(t,n){var e=t.exports={version:"2.6.5"};"number"==typeof __e&&(__e=e)},function(t,n,e){var r=e(6);t.exports=function(t){if(!r(t))throw TypeError(t+" is not an object!");return t}},function(t,n){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,n){var e=0,r=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++e+r).toString(36))}},function(t,n,e){var r=e(10),o=e(1),i="__core-js_shared__",a=o[i]||(o[i]={});(t.exports=function(t,n){return a[t]||(a[t]=void 0!==n?n:{})})("versions",[]).push({version:r.version,mode:e(23)?"pure":"global",copyright:"Â© 2019 Denis Pushkarev (zloirock.ru)"})},function(t,n,e){var x=e(24),g=e(25),S=e(26),O=e(28),r=e(40);t.exports=function(l,t){var p=1==l,d=2==l,y=3==l,h=4==l,v=6==l,m=5==l||v,b=t||r;return function(t,n,e){for(var r,o,i=S(t),a=g(i),u=x(n,e,3),c=O(a.length),s=0,f=p?b(t,c):d?b(t,0):void 0;s<c;s++)if((m||s in a)&&(o=u(r=a[s],s,i),l))if(p)f[s]=o;else if(o)switch(l){case 3:return!0;case 5:return r;case 6:return s;case 2:f.push(r)}else if(h)return!1;return v?-1:y||h?h:f}}},function(t,n){var e={}.toString;t.exports=function(t){return e.call(t).slice(8,-1)}},function(t,n){t.exports={}},function(t,n,e){var r=e(49),o=e(32);t.exports=Object.keys||function(t){return r(t,o)}},function(t,n,e){var r=e(14)("keys"),o=e(13);t.exports=function(t){return r[t]||(r[t]=o(t))}},function(t,n){t.exports=Highcharts},function(t,n,e){var r=e(6),o=e(1).document,i=r(o)&&r(o.createElement);t.exports=function(t){return i?o.createElement(t):{}}},function(t,n){t.exports=function(t,n){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:n}}},function(t,n){t.exports=!1},function(t,n,e){var i=e(39);t.exports=function(r,o,t){if(i(r),void 0===o)return r;switch(t){case 1:return function(t){return r.call(o,t)};case 2:return function(t,n){return r.call(o,t,n)};case 3:return function(t,n,e){return r.call(o,t,n,e)}}return function(){return r.apply(o,arguments)}}},function(t,n,e){var r=e(16);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==r(t)?t.split(""):Object(t)}},function(t,n,e){var r=e(27);t.exports=function(t){return Object(r(t))}},function(t,n){t.exports=function(t){if(null==t)throw TypeError("Can't call method on  "+t);return t}},function(t,n,e){var r=e(29),o=Math.min;t.exports=function(t){return 0<t?o(r(t),9007199254740991):0}},function(t,n){var e=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(0<t?r:e)(t)}},function(t,n,e){var r=e(0)("unscopables"),o=Array.prototype;null==o[r]&&e(2)(o,r,{}),t.exports=function(t){o[r][t]=!0}},function(t,n,e){"use strict";var r=e(30),o=e(44),i=e(17),a=e(9);t.exports=e(45)(Array,"Array",function(t,n){this._t=a(t),this._i=0,this._k=n},function(){var t=this._t,n=this._k,e=this._i++;return!t||e>=t.length?(this._t=void 0,o(1)):o(0,"keys"==n?e:"values"==n?t[e]:[e,t[e]])},"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},function(t,n){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(t,n,e){var r=e(5).f,o=e(8),i=e(0)("toStringTag");t.exports=function(t,n,e){t&&!o(t=e?t:t.prototype,i)&&r(t,i,{configurable:!0,value:n})}},function(t,n,e){"use strict";var r=e(12);t.exports=function(t,n){return!!t&&r(function(){n?t.call(null,function(){},1):t.call(null)})}},function(t,n,e){"use strict";var r=e(3),o=e(15)(5),i="find",a=!0;i in[]&&Array(1)[i](function(){a=!1}),r(r.P+r.F*a,"Array",{find:function(t){return o(this,t,1<arguments.length?arguments[1]:void 0)}}),e(30)(i)},function(t,n,e){t.exports=!e(4)&&!e(12)(function(){return 7!=Object.defineProperty(e(21)("div"),"a",{get:function(){return 7}}).a})},function(t,n,e){var o=e(6);t.exports=function(t,n){if(!o(t))return t;var e,r;if(n&&"function"==typeof(e=t.toString)&&!o(r=e.call(t)))return r;if("function"==typeof(e=t.valueOf)&&!o(r=e.call(t)))return r;if(!n&&"function"==typeof(e=t.toString)&&!o(r=e.call(t)))return r;throw TypeError("Can't convert object to primitive value")}},function(t,n,e){t.exports=e(14)("native-function-to-string",Function.toString)},function(t,n){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,n,e){var r=e(41);t.exports=function(t,n){return new(r(t))(n)}},function(t,n,e){var r=e(6),o=e(42),i=e(0)("species");t.exports=function(t){var n;return o(t)&&("function"!=typeof(n=t.constructor)||n!==Array&&!o(n.prototype)||(n=void 0),r(n)&&null===(n=n[i])&&(n=void 0)),void 0===n?Array:n}},function(t,n,e){var r=e(16);t.exports=Array.isArray||function(t){return"Array"==r(t)}},function(t,n,e){for(var r=e(31),o=e(18),i=e(7),a=e(1),u=e(2),c=e(17),s=e(0),f=s("iterator"),l=s("toStringTag"),p=c.Array,d={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},y=o(d),h=0;h<y.length;h++){var v,m=y[h],b=d[m],x=a[m],g=x&&x.prototype;if(g&&(g[f]||u(g,f,p),g[l]||u(g,l,m),c[m]=p,b))for(v in r)g[v]||i(g,v,r[v],!0)}},function(t,n){t.exports=function(t,n){return{value:n,done:!!t}}},function(t,n,e){"use strict";var x=e(23),g=e(3),S=e(7),O=e(2),w=e(17),A=e(46),j=e(33),L=e(53),P=e(0)("iterator"),F=!([].keys&&"next"in[].keys()),T="values",_=function(){return this};t.exports=function(t,n,e,r,o,i,a){A(e,n,r);var u,c,s,f=function(t){if(!F&&t in y)return y[t];switch(t){case"keys":case T:return function(){return new e(this,t)}}return function(){return new e(this,t)}},l=n+" Iterator",p=o==T,d=!1,y=t.prototype,h=y[P]||y["@@iterator"]||o&&y[o],v=h||f(o),m=o?p?f("entries"):v:void 0,b="Array"==n&&y.entries||h;if(b&&(s=L(b.call(new t)))!==Object.prototype&&s.next&&(j(s,l,!0),x||"function"==typeof s[P]||O(s,P,_)),p&&h&&h.name!==T&&(d=!0,v=function(){return h.call(this)}),x&&!a||!F&&!d&&y[P]||O(y,P,v),w[n]=v,w[l]=_,o)if(u={values:p?v:f(T),keys:i?v:f("keys"),entries:m},a)for(c in u)c in y||S(y,c,u[c]);else g(g.P+g.F*(F||d),n,u);return u}},function(t,n,e){"use strict";var r=e(47),o=e(22),i=e(33),a={};e(2)(a,e(0)("iterator"),function(){return this}),t.exports=function(t,n,e){t.prototype=r(a,{next:o(1,e)}),i(t,n+" Iterator")}},function(t,n,r){var o=r(11),i=r(48),a=r(32),u=r(19)("IE_PROTO"),c=function(){},s="prototype",f=function(){var t,n=r(21)("iframe"),e=a.length;for(n.style.display="none",r(52).appendChild(n),n.src="javascript:",(t=n.contentWindow.document).open(),t.write("<script>document.F=Object<\/script>"),t.close(),f=t.F;e--;)delete f[s][a[e]];return f()};t.exports=Object.create||function(t,n){var e;return null!==t?(c[s]=o(t),e=new c,c[s]=null,e[u]=t):e=f(),void 0===n?e:i(e,n)}},function(t,n,e){var a=e(5),u=e(11),c=e(18);t.exports=e(4)?Object.defineProperties:function(t,n){u(t);for(var e,r=c(n),o=r.length,i=0;i<o;)a.f(t,e=r[i++],n[e]);return t}},function(t,n,e){var a=e(8),u=e(9),c=e(50)(!1),s=e(19)("IE_PROTO");t.exports=function(t,n){var e,r=u(t),o=0,i=[];for(e in r)e!=s&&a(r,e)&&i.push(e);for(;n.length>o;)a(r,e=n[o++])&&(~c(i,e)||i.push(e));return i}},function(t,n,e){var c=e(9),s=e(28),f=e(51);t.exports=function(u){return function(t,n,e){var r,o=c(t),i=s(o.length),a=f(e,i);if(u&&n!=n){for(;a<i;)if((r=o[a++])!=r)return!0}else for(;a<i;a++)if((u||a in o)&&o[a]===n)return u||a||0;return!u&&-1}}},function(t,n,e){var r=e(29),o=Math.max,i=Math.min;t.exports=function(t,n){return(t=r(t))<0?o(t+n,0):i(t,n)}},function(t,n,e){var r=e(1).document;t.exports=r&&r.documentElement},function(t,n,e){var r=e(8),o=e(26),i=e(19)("IE_PROTO"),a=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=o(t),r(t,i)?t[i]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?a:null}},function(t,n,e){"use strict";var r=e(55),o={};o[e(0)("toStringTag")]="z",o+""!="[object z]"&&e(7)(Object.prototype,"toString",function(){return"[object "+r(this)+"]"},!0)},function(t,n,e){var o=e(16),i=e(0)("toStringTag"),a="Arguments"==o(function(){return arguments}());t.exports=function(t){var n,e,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(e=function(t,n){try{return t[n]}catch(t){}}(n=Object(t),i))?e:a?o(n):"Object"==(r=o(n))&&"function"==typeof n.callee?"Arguments":r}},function(t,n,e){var r=e(3),o=e(57)(!1);r(r.S,"Object",{values:function(t){return o(t)}})},function(t,n,e){var c=e(18),s=e(9),f=e(58).f;t.exports=function(u){return function(t){for(var n,e=s(t),r=c(e),o=r.length,i=0,a=[];i<o;)f.call(e,n=r[i++])&&a.push(u?[n,e[n]]:e[n]);return a}}},function(t,n){n.f={}.propertyIsEnumerable},function(t,n,e){"use strict";var r=e(3),o=e(15)(1);r(r.P+r.F*!e(34)([].map,!0),"Array",{map:function(t){return o(this,t,arguments[1])}})},function(t,n,e){var r=e(5).f,o=Function.prototype,i=/^\s*function ([^ (]*)/;"name"in o||e(4)&&r(o,"name",{configurable:!0,get:function(){try{return(""+this).match(i)[1]}catch(t){return""}}})},function(t,n,e){"use strict";var r=e(3),o=e(15)(0),i=e(34)([].forEach,!0);r(r.P+r.F*!i,"Array",{forEach:function(t){return o(this,t,arguments[1])}})},function(t,n,e){"use strict";e.r(n);e(35),e(43),e(31),e(54),e(56),e(59),e(60),e(61);var r=e(20),o=e.n(r),i=function(){var r={};o.a.data({googleSpreadsheetKey:"1gzVjCcfEK2nBXQp2w5HCm4ZRH288X7WJVG9oPqsdEP8",googleSpreadsheetWorksheet:1,switchRowsAndColumns:!0,parsed:function(t){t.forEach(function(t,n){0!=n&&(r.subi=r.subi||{},r.subi.name="Subi Reef",r.subi.data=r.subi.data||[],t[1]&&r.subi.data.push({x:new Date(t[0]),y:t[1]}),r.mischief=r.mischief||{},r.mischief.name="Mischief Reef",r.mischief.data=r.mischief.data||[],t[2]&&r.mischief.data.push({x:new Date(t[0]),y:t[2]}))});var n,e=Object.values(r).map(function(t,n){return t});n=e,o.a.chart("chartVessels",{chart:{zoomType:!1},title:{x:25,align:"left",text:"Vessel Presence in Subi Reef and Mischief Reef"},credits:{enabled:!0,href:!1,text:"Developed based on information or analysis provided by Vulcan Technologies LLC. | CSIS"},legend:{align:"left",verticalAlign:"bottom",layout:"horizontal",symbolRadius:0,squareSymbol:!0,title:{text:'<span style="font-size: 10px; color: #808080; font-weight: normal">Click to hide</span>'}},tooltip:{headerFormat:'<span style="font-size: 10px;color:{point.color}">â¬¤ </span>   <b>{point.series.name}</b><br/>',pointFormatter:function(){var t=new Date(this.x).toLocaleDateString("en-US",{month:"long",year:"numeric"});return"".concat(t,": ").concat(this.y," vessels")}},yAxis:{title:{text:"Vessel Count"},endOnTick:!1,tickInterval:50},xAxis:{type:"datetime"},series:[{type:"column",name:n[0].name,data:n[0].data,borderWidth:0,borderRadius:3,className:"highcharts-series-subi-column",color:"#ef4723",events:{legendItemClick:function(t){var n=this,e=this.chart.series.find(function(t){return t.name===n.name&&"area"===t.userOptions.type});e.visible?e.hide():e.show()}}},{type:"column",name:n[1].name,data:n[1].data,borderWidth:0,borderRadius:3,className:"highcharts-series-mischief-column",color:"#68c8d2",events:{legendItemClick:function(t){var n=this,e=this.chart.series.find(function(t){return t.name===n.name&&"area"===t.userOptions.type});e.visible?e.hide():e.show()}}},{type:"area",name:n[0].name,showInLegend:!1,data:n[0].data,className:"highcharts-series-subi-area",color:"#ef4723"},{type:"area",name:n[1].name,data:n[1].data,showInLegend:!1,className:"highcharts-series-mischief-area",color:"#68c8d2"}],responsive:{rules:[{condition:{maxWidth:400,minWidth:250},chartOptions:{chart:{spacingBottom:15},legend:{y:-15},credits:{style:{width:200},position:{align:"right",y:-15}}}}]}})}})},a={colors:["#ed392a","#58a897","#83badc","#3b75bb","#a483a8","#f7890e","#69518d","#f7d768","#8cb561","#ef9a9a","#728c99"],chart:{backgroundColor:"#FFF",border:"none",color:"#000",plotShadow:!1,height:500},title:{style:{color:"#000",font:'25px "Roboto", Arial, sans-serif',fontWeight:"400"},widthAdjust:-60},subtitle:{style:{fontSize:"12px",fontFamily:"'Hind', 'Arial', sans-serif",color:"#808080"}},credits:{style:{cursor:"default",fontFamily:"'Hind', 'Arial', sans-serif"}},tooltip:{style:{fontSize:"13px",fontFamily:"'Hind', 'Arial', sans-serif"},headerFormat:"<span style=\"font-size: 13px;text-align:center;margin-bottom: 5px;font-weight: bold;font-family: 'Roboto', arial, sans-serif;\">{point.key}</span><br/>"},xAxis:{labels:{style:{color:"#666",fontSize:"12px",fontFamily:"'Hind', 'Arial', sans-serif"}},title:{style:{color:"#666",fontSize:"13px",fontFamily:"'Hind', 'Arial', sans-serif"}},gridLineWidth:1,lineWidth:0,tickColor:"#e6e6e6"},yAxis:{labels:{style:{color:"#666",fontSize:"12px",fontFamily:"'Hind', 'Arial', sans-serif"},x:-3},title:{style:{color:"#666",fontSize:"13px",fontFamily:"'Hind', 'Arial', sans-serif"},margin:20},tickColor:"#e6e6e6"},legend:{title:{style:{fontFamily:"'Roboto', 'Arial', sans-serif",fontSize:"15px",color:"#000",fontStyle:"normal"}},itemStyle:{color:"#000",fontSize:"14px",fontFamily:"'Hind', 'Arial', sans-serif",textOverflow:null},itemHoverStyle:{color:"#ed392a"}}};window.addEventListener("DOMContentLoaded",function(){Highcharts.setOptions(a),i()})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,